#!/bin/sh
##############################################################
pkgbase="samba"
vers="4.12.6"
url="https://download.samba.org/pub/samba/stable/samba-${vers}.tar.gz"
verify="https://download.samba.org/pub/samba/stable/samba-${vers}.tar.asc"
digest=""
arch=`uname -m`
build=B1
src="samba-${vers}"
OPT_CONFIG="
	--with-piddir=/run/samba
	--with-pammodulesdir=/lib/security
	--enable-fhs
	--without-ad-dc
	--without-systemd
	--disable-cups
	--enable-selftest"
DOCS="BUILD_SYSTEMS.txt COPYING PFIF.txt README.Coding README.cifs-utils README.contributing README.md WHATSNEW.txt release-scripts"
patchfiles="0001-Fix-compile-failure-with-glibc-2.32.patch"
# specifies files that are not in source archive and patchfiles
addfiles="samba.init samba.pam"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; cp -a $S $B
    cd $B
    for patch in $patchfiles ; do
        patch -p1 < $W/$patch
    done

    # Fix a test that always fails:
    echo "^samba4.rpc.echo.*on.*ncacn_np.*with.*object.*nt4_dc" >> selftest/knownfail

    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export CFLAGS="-I/usr/include/tirpc"
    export LDFLAGS='-Wl,--as-needed -ltirpc'
    $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B
    export CFLAGS="-I/usr/include/tirpc"
    export LDFLAGS='-Wl,--as-needed -ltirpc'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # Libraries
  mkdir -p -v $P/${libdir}
  mv -v $P/usr/lib/libnss_win{s,bind}.so*   $P/${libdir}
  ln -v -sf ../../${libdir}/libnss_winbind.so.2 $P/usr/${libdir}/libnss_winbind.so
  ln -v -sf ../../${libdir}/libnss_wins.so.2    $P/usr/${libdir}/libnss_wins.so

  # config
  install -v -m644 examples/smb.conf.default $P/etc/samba/smb.conf.dist
  sed -i -e '/log file/s|/usr/local/samba/var|/var/log/samba|' $P/etc/samba/smb.conf.dist

  # for openldap
  mkdir -p -v $P/etc/openldap/schema
  install -v -m644    examples/LDAP/samba* $P/etc/openldap/schema
  install -v -m755    examples/LDAP/{get*,ol*} $P/etc/openldap/schema

  # pam
  install -v -m644 -D $W/samba.pam $P/etc/pam.d/samba

  # init (default to not spawn)
  install -v -m644 -D $W/samba.init $P/etc/rc.d/init.d/samba
  for i in $(seq 0 6)
  do
      install -dm755 -v $P/etc/rc.d/rc"$i".d
      case $i in
	  0|1|2|6) ln -sf ../init.d/samba $P/etc/rc.d/rc"$i".d/K48samba ;;
	  3|4|5)   ln -sf ../init.d/samba $P/etc/rc.d/rc"$i".d/S45samba ;;
      esac
  done

  # docdir
  for f in samba.pam samba.init
  do
    install -Dm644 -v $W/$f $docdir/$src/$f
  done

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
