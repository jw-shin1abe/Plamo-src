#!/bin/sh
##############################################################
pkgbase="gettext"
vers="0.20.1"
url="https://ftp.gnu.org/pub/gnu/gettext/gettext-${vers}.tar.gz"
## compat libs
compat_vers="0.19.8.1"
compat_url="https://ftp.gnu.org/pub/gnu/gettext/gettext-${compat_vers}.tar.gz"
verify="${url}.sig"
digest=""
arch=`uname -m`
build=B2
src="gettext-${vers}"
OPT_CONFIG="--disable-static --enable-shared --docdir=/usr/share/doc/$src"
DOCS="AUTHORS COPYING ChangeLog ChangeLog.0 HACKING INSTALL INSTALL.windows NEWS README THANKS"
patchfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
    if [ ! -f $W/${compat_url##*/} ]; then
	wget $compat_url{,.sig}
	gpg --verify ${compat_url##*/}.sig
	if [ $? -ne 0 ]; then
	    exit 1
	fi
    fi
    tar xvf ${compat_url##*/}
fi

if [ $opt_config -eq 1 ] ; then
######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done

    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B
    for ver in $compat_vers $vers
    do
	echo "*** Configure $pkgbase-$ver"
	mkdir -p $B/$ver
	src_dir=$W/${pkgbase}-${ver}
	cd $B/$ver
	export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
	export LDFLAGS='-Wl,--as-needed' 
	$src_dir/configure --prefix=/usr --sysconfdir=/etc --libdir=/usr/${libdir} --localstatedir=/var --mandir=/usr/share/man ${OPT_CONFIG}
	if [ $? != 0 ]; then
            echo "configure error. $0 script stop"
            exit 255
	fi
	echo "*** Configure $pkgbase-$ver: done."
    done
fi

if [ $opt_build -eq 1 ] ; then
    for ver in $compat_vers $vers
    do
	cd $B/$ver
	export LDFLAGS='-Wl,--as-needed'
	make -j3
	if [ $? != 0 ]; then
            echo "build error. $0 script stop"
            exit 255
	fi
    done
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B/$vers

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  /tmp/build/0.19.8.1/gettext-tools/src/.libs/libgettextsrc-0.19.8.1.so
  karma@discovery:~/work/Plamo-src/plamo/02_devel/gettext$ find /tmp/build/0.19.8.1/ -name libgettextlib-0.19.8.1.so
  /tmp/build/0.19.8.1/gettext-tools/gnulib-lib/.libs/libgettextlib-0.19.8.1.so
  
  install -Dm755 -v -t $P/usr/${libdir}/ \
	  $B/$compat_vers/gettext-tools/src/.libs/libgettextsrc-0.19.8.1.so
  install -Dm755 -v -t $P/usr/${libdir}/ \
	  $B/$compat_vers/gettext-tools/gnulib-lib/.libs/libgettextlib-0.19.8.1.so \

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
