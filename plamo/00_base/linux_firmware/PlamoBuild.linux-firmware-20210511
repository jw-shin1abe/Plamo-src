#!/bin/sh
##############################################################
pkgbase="linux_firmware"
vers="20210511"
url="https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/snapshot/linux-firmware-${vers}.tar.gz"
#commitid="7a30af16115959cf5a817ae51429e72c0084fc0c"
verify="https://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git/snapshot/linux-firmware-20210511.tar.asc"
digest=""
arch=`uname -m`
build=B2
src="linux-firmware-${vers}"
OPT_CONFIG=""
DOCS="LICENCE.ralink-firmware.txt LICENCE.rtlwifi_firmware.txt LICENCE.tda7706-firmware.txt LICENSE.QualcommAtheros_ar3k LICENSE.QualcommAtheros_ath10k LICENSE.amd-ucode LICENSE.amdgpu LICENSE.atmel LICENSE.dib0700 LICENSE.hfi1_firmware LICENSE.i915 LICENSE.ipu3_firmware LICENSE.nxp_mc_firmware LICENSE.qcom LICENSE.radeon LICENSE.sdma_firmware README TDA7706_OM_v2.5.1_boot.txt TDA7706_OM_v3.0.2_boot.txt"
patchfiles="0001-Update-WHENCE-to-prevent-generation-of-filenames-wit.patch"
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi

###
#version = date.commitid
###
#if [ $opt_download -ne 1 ]; then
#    pushd $S
#    vers=$(TZ=UTC git show -s --pretty=%cd --date=format-local:%Y%m%d HEAD).$(git rev-parse --short HEAD)
#    pkg=${pkgbase}-${vers}-${arch}-${build}
#    popd
#fi

if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
    if [ -n $patchfiles ]; then
        pushd $S
        for p in $patchfiles
        do
            patch -p1 -i $W/$p
        done
        popd
    fi
fi

if [ $opt_build -eq 1 ] ; then
    echo "There is nothing to do in build section"
    # TODO: In build section, we may have to make the AMD microcode.
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $S

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  NO_STRIP=1 install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
