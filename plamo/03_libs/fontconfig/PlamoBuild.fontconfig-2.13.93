#!/bin/sh
##############################################################
pkgbase='fontconfig'
vers='2.13.93'
url="https://www.freedesktop.org/software/${pkgbase}/release/${pkgbase}-${vers}.tar.xz"
digest="sha256sum:ea968631eadc5739bc7c8856cef5c77da812d1f67b763f5e51b57b8026c1a0a0"
verify=""
arch=`uname -m`
build=B1
src="${pkgbase}-${vers}"
OPT_CONFIG="--disable-static
	--enable-shared
	--disable-docs
	--docdir=/usr/share/doc/${src}"
DOCS='AUTHORS COPYING ChangeLog INSTALL NEWS README'
enabled_config="
	09-autohint-if-no-hinting.conf
	10-autohint.conf
	10-hinting-full.conf
	10-no-sub-pixel.conf
	10-scale-bitmap-fonts.conf
	20-unhint-small-vera.conf
	30-metric-aliases.conf
	40-nonlatin.conf
	49-sansserif.conf
	51-local.conf
	60-generic.conf
	60-latin.conf
	65-nonlatin.conf
	69-unifont.conf
	80-delicious.conf
	90-synthetic.conf"
patchfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build{,32})
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)


if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
  download_sources
fi

if [ $opt_config -eq 1 ] ; then
  if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
######################################################################
#  don't copy sources, so need patch in the src dir
######################################################################
  cd $S
  for patch in $patchfiles ; do
    if [ ! -f .${patch} ]; then
      patch -p1 < $W/$patch
      touch .${patch}
    fi
  done
  # if [ -f autogen.sh ] ; then
  #   sh ./autogen.sh
  # fi

  rm -f src/fcobjshash.h

  cd $B
  export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig:/opt/kde/${libdir}/pkgconfig
  export LDFLAGS='-Wl,--as-needed' 
  $S/configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    
  if [ $? != 0 ]; then
    echo "configure error. $0 script stop"
    exit 255
  fi
fi
    
if [ $opt_build -eq 1 ] ; then
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make -j3
  if [ $? != 0 ]; then
    echo "build error. $0 script stop"
    exit 255
  fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B
  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  cd $S
  install -v -dm755 \
          $P/usr/share/{man/man{1,3,5},doc/fontconfig-2.12.6/fontconfig-devel}
  install -v -m644 fc-*/*.1         $P/usr/share/man/man1
  install -v -m644 doc/*.3          $P/usr/share/man/man3
  install -v -m644 doc/fonts-conf.5 $P/usr/share/man/man5
  install -v -m644 doc/fontconfig-devel/* \
          $P/usr/share/doc/fontconfig-${vers}/fontconfig-devel
  install -v -m644 doc/*.{pdf,sgml,txt,html} \
          $P/usr/share/doc/fontconfig-${vers}

  install -v -dm755 $P/etc/template/Source/.config/fontconfig
  install -v -m644 $W/fonts.conf $P/etc/template/Source/.config/fontconfig/fonts.conf
  install -v -Dm644 $W/fonts.conf $docdir/$src/fonts.conf

  conf_dir="/usr/share/fontconfig/conf.avail"
  ( cd $P/etc/fonts/conf.d
    for fontconf in $enabled_config
    do
	if [ -r $P/$conf_dir ]; then
	    ln -svf $conf_dir/$fontconf .
	fi
    done
  )

  mkdir -pv $P/install
  cat <<EOF >> $P/install/initpkg
if [ -x /usr/bin/fc-cache ]; then
   /usr/bin/fc-cache -f
fi
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man, 
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and 
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
