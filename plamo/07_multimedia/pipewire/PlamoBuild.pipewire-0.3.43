#!/bin/sh
##############################################################
pkgbase="pipewire"
vers="0.3.43"
url="https://gitlab.freedesktop.org/pipewire/pipewire/-/archive/0.3.43/pipewire-0.3.43.tar.bz2"
verify=""
digest="md5sum:6e12461b046e45c4c47bd7face365818"
arch=`uname -m`
build=B1
src="pipewire-0.3.43"
OPT_CONFIG="--libexecdir=/usr/libexec
  --bindir=/usr/bin
  --sbindir=/usr/sbin
  --includedir=/usr/include
  --datadir=/usr/share
  --mandir=/usr/share/man
  --sysconfdir=/etc
  --localstatedir=/var
  --buildtype=release
  -Djack=disabled
  -Dpipewire-jack=disabled"
DOCS="COPYING INSTALL.md LICENSE NEWS README.md doc meson_options.txt"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles="pipewire-enable.sh pipewire-disable.sh pipewire.desktop.sample pipewire-pulse.desktop.sample pipewire-media-session.desktop.sample"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed'
    meson --prefix=/usr --libdir=/usr/${libdir} ${OPT_CONFIG} $S
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B
    ninja
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  DESTDIR=$P ninja install

# Create system config file override directory:
  mkdir -p $P/etc/pipewire

# Add sample configuation files:
  mkdir -p $P/etc/xdg/autostart
  cp -a $W/pipewire.desktop.sample $P/etc/xdg/autostart
  cp -a $W/pipewire-media-session.desktop.sample $P/etc/xdg/autostart
  cp -a $W/pipewire-pulse.desktop.sample $P/etc/xdg/autostart
  chown root:root $P/etc/xdg/autostart/*
  chmod 644 $P/etc/xdg/autostart/*
  mkdir -p $P/usr/sbin
  cp -a $W/pipewire-disable.sh $P/usr/sbin
  cp -a $W/pipewire-enable.sh $P/usr/sbin
  chown root:root $P/usr/sbin/pipewire-disable.sh $P/usr/sbin/pipewire-enable.sh
  chmod 755 $P/usr/sbin/pipewire-disable.sh $P/usr/sbin/pipewire-enable.sh

# Save desktop files and custom scripts just incase
mkdir -p $P/usr/share/doc/$src
cp $W/pipewire.desktop.sample $W/pipewire-media-session.desktop.sample $W/pipewire-pulse.desktop.sample $P/usr/share/doc/$src/
cp $W/pipewire-enable.sh $W/pipewire-disable.sh $P/usr/share/doc/$src/

mkdir -p $P/install
cat << EOF > $P/install/doinst.sh
# Toss redundant sample files:
for file in pipewire.desktop pipewire-media-session.desktop pipewire-pulse.desktop ; do
  cmp etc/xdg/autostart/${file} etc/xdg/autostart/${file}.sample 2> /dev/null && rm etc/xdg/autostart/${file}.sample
done
EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
