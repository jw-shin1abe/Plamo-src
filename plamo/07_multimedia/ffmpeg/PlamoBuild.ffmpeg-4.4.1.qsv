#!/bin/sh
##############################################################
pkgbase="ffmpeg"
vers="4.4.1.qsv"
url="https://ffmpeg.org/releases/ffmpeg-4.4.tar.xz"
verify=""
digest="md5sum:41a1ca8693acc56088e8eaf3899b91ea"
arch=`uname -m`
build=B1  # version bump to 4.4 and compiled against intel-mediasdk-21.1.3
src="ffmpeg-4.4.1"

# Arch linux options which didn't apply
#    --enable-avisynth
#    --enable-ladspa
#    --enable-libiec61883 \
#    --enable-libmfx \
#   --enable-libmodplug \
#   --enable-libopencore_amrnb \
#    --enable-libopencore_amrwb \
##    --enable-librav1e \
#  --enable-libssh \
#   --enable-libsrt \
#    --enable-libvidstab \
#   --enable-libvmaf \
#    --enable-nvdec \
#    --enable-nvenc \
#    --enable-amf \
OPT_CONFIG="--disable-static --enable-shared
    --disable-debug
    --disable-stripping 
    --enable-cuda-llvm 
    --enable-lto 
    --enable-fontconfig 
    --enable-gmp 
    --enable-gnutls 
    --enable-gpl 
    --enable-libaom 
    --enable-libass 
    --enable-libbluray 
    --enable-libdav1d 
    --enable-libdrm 
    --enable-libfreetype 
    --enable-libfribidi 
    --enable-libgsm 
    --enable-libjack 
    --enable-libmp3lame 
    --enable-libopenjpeg 
    --enable-libopus 
    --enable-libpulse 
    --enable-libspeex 
    --enable-libtheora 
    --enable-libv4l2 
    --enable-libsoxr 
    --enable-libvorbis 
    --enable-libvpx 
    --enable-libwebp 
    --enable-libx264 
    --enable-libx265 
    --enable-libxcb 
    --enable-libxml2 
    --enable-libxvid 
    --enable-shared 
    --enable-version3
    --enable-libmfx"

DOCS="COPYING.GPLv2 COPYING.GPLv3 COPYING.LGPLv2.1 COPYING.LGPLv3 Changelog INSTALL.md LICENSE.md MAINTAINERS README.md RELEASE RELEASE_NOTES doc"
patchfiles=""
# specifies files that are not in source archive and patchfiles
addfiles=""
compress=txz
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi


if [ $opt_config -eq 1 ] ; then

    for f in $addfiles $patchfiles
    do
        if [ ! -f $f ]; then
            echo "Required file ($f) is missing."
            exit 255
        fi
    done

######################################################################
#  copy source build. patch apply in build dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi

    cd $B
    export PKG_CONFIG_PATH=/usr/${libdir}/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    $S/configure --prefix=/usr --libdir=/usr/${libdir} --mandir=/usr/share/man ${OPT_CONFIG}
    echo -e "\E[0;32mPress any key to build the package!\E[0;0m"
    read
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_build -eq 1 ] ; then
    cd $B 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi

    make tools/qt-faststart
    make doc/ff{mpeg,play}.1

fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $B

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
