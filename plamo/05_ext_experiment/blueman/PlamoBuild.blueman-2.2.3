#!/bin/sh
##############################################################
pkgbase="blueman"
vers="2.2.3"
url="https://github.com/blueman-project/blueman/releases/download/2.2.3/blueman-2.2.3.tar.xz"
verify=""
digest=""
arch=`uname -m`
build=B1
src="blueman-2.2.3"
OPT_CONFIG="--disable-static --enable-shared --with-dhcp-config=/etc/dhcp.conf --enable-polkit --enable-caja-sendto --enable-thunar-sendto --enable-settings-integration --disable-schemas-compile"
DOCS="CHANGELOG.md COPYING README.md"
patchfiles="dont-autostart-applet-in-kde.diff blueman.allow.access.to.netdev.group.diff blueman-2.2.1.LC_MESSAGES-ja_v1.4.diff"
compress=tzst
##############################################################

source /usr/share/plamobuild_functions.sh

# このスクリプトで使う1文字変数の意味
#
# $W : このスクリプトを動かすカレントディレクトリ
# $S : ソースコードのあるディレクトリ(デフォルト: $W/${src})
# $B : ビルド用ディレクトリ(デフォルト: /tmp/build)
# $P : ビルドしたファイルをインストールするディレクトリ（デフォルト: $W/work)

if [ $# -eq 0 ] ; then
  opt_download=0 ; opt_config=1 ; opt_build=1 ; opt_package=1
else
  opt_download=0 ; opt_config=0 ; opt_build=0 ; opt_package=0
  for i in $@ ; do
    case $i in
    download) opt_download=1 ;;
    config) opt_config=1 ;;
    build) opt_build=1 ;;
    package) opt_package=1 ;;
    esac
  done
fi
if [ $opt_download -eq 1 ] ; then
    download_sources
fi

if [ $opt_config -eq 1 ] ; then
######################################################################
#  out of tree build. patch apply in src dir
######################################################################
    if [ -d $B ] ; then rm -rf $B ; fi ; mkdir -p $B 
    cd $S
    for patch in $patchfiles ; do
        if [ ! -f .${patch} ]; then
            patch -p1 < $W/$patch
            touch .${patch}
        fi
    done
    # if [ -f autogen.sh ] ; then
    #   sh ./autogen.sh
    # fi
    cd $B
    export PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/share/pkgconfig
    export LDFLAGS='-Wl,--as-needed' 
    export PYTHON=/usr/bin/python3
    # need "pip install cython"
    export CYTHONEXEC=/usr/bin/cython
    cd $S
    sh autogen.sh
    ./configure --prefix=/usr --sysconfdir=/etc --localstatedir=/var --mandir='${prefix}'/share/man ${OPT_CONFIG}
    if [ $? != 0 ]; then
        echo "configure error. $0 script stop"
        exit 255
    fi

    この2修正は無くてもよさそう

    # I think there's a built-in fallback, but just in case:
    sed -i "s,nautilus,thunar,g" blueman/Constants.py*

    # https://github.com/blueman-project/blueman/issues/435
    sed -i "s,#!/usr/bin/env python3,#!/usr/bin/python3.9},g" module/_blueman.pyx apps/*

fi

if [ $opt_build -eq 1 ] ; then
    cd $S 
    export LDFLAGS='-Wl,--as-needed'
    make -j3
    if [ $? != 0 ]; then
        echo "build error. $0 script stop"
        exit 255
    fi
fi

if [ $opt_package -eq 1 ] ; then
  check_root
  if [ -d $P ] ; then rm -rf $P ; fi ; mkdir -p $P
  cd $S

  export LDFLAGS='-Wl,--as-needed'
  make install DESTDIR=$P

  # Install default rules allowing users in the netdev group to make changes:
  mkdir -p $P/etc/polkit-1/rules.d
  cat <<"EOF" > $P/etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules.new
/* Allow users in netdev group to use blueman feature requiring root without authentication */
polkit.addRule(function(action, subject) {
    if ((action.id == "org.blueman.network.setup" ||
         action.id == "org.blueman.dhcp.client" ||
         action.id == "org.blueman.rfkill.setstate" ||
         action.id == "org.blueman.pppd.pppconnect") &&
        subject.isInGroup("netdev")) {
        return polkit.Result.YES;
    }
});
EOF

  mkdir $P/install
  cat <<EOF > $P/install/initpkg
if [ -f /etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules ]; then
    mv /etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules /etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules.old
fi
mv /etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules.new /etc/polkit-1/rules.d/30-blueman-netdev-allow-access.rules  

EOF

################################
#      install tweaks
#  strip binaries, delete locale except ja, compress man,
#  install docs and patches, compress them and  chown root.root
################################
  install_tweak

#############################
#   convert symlink to null file and
#   add "ln -sf" command into install/doinst.sh
################################
  convert_links

  cd $P
  /sbin/makepkg ../$pkg.$compress <<EOF
y
1
EOF

fi
